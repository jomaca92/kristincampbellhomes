---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

// Get all properties, sorted by date listed
const allProperties = await getCollection('properties');
const properties = allProperties
	.filter((property: CollectionEntry<'properties'>) => property.data.status === 'For Sale')
	.sort((a: CollectionEntry<'properties'>, b: CollectionEntry<'properties'>) => 
		new Date(b.data.dateListed).getTime() - new Date(a.data.dateListed).getTime()
	);

// Get unique property types for filter
const propertyTypes: string[] = ['All Types', ...Array.from(new Set(properties.map((property: CollectionEntry<'properties'>) => property.data.propertyType)))];

// Format price helper
function formatPrice(price: number) {
	return new Intl.NumberFormat('en-US', {
		style: 'currency',
		currency: 'USD',
		minimumFractionDigits: 0,
		maximumFractionDigits: 0,
	}).format(price);
}
---

<Layout 
	title="Properties - Browse Available Homes | Kristin Campbell Homes"
	description="Browse our selection of available properties for sale. Find your dream home with Kristin Campbell Homes."
>
	<!-- Hero Section -->
	<section class="bg-gradient-to-r from-blue-600 to-blue-800 text-white py-16">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="text-center">
				<h1 class="text-4xl md:text-5xl font-bold mb-6">Available Properties</h1>
				<p class="text-xl text-blue-100 max-w-3xl mx-auto">
					Discover your perfect home from our carefully curated selection of properties
				</p>
			</div>
		</div>
	</section>

	<!-- Search and Filters -->
	<section class="py-8 bg-gray-50 border-b border-gray-200">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="bg-white p-6 rounded-lg shadow-sm">
				<div class="grid grid-cols-1 md:grid-cols-4 gap-4">
					<div>
						<label for="search" class="block text-sm font-medium text-gray-700 mb-2">Search</label>
						<input
							type="text"
							id="search"
							placeholder="Address, city, or zip code"
							class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
						/>
					</div>
					<div>
						<label for="type" class="block text-sm font-medium text-gray-700 mb-2">Property Type</label>
						<select
							id="type"
							class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
						>
							{propertyTypes.map((type) => (
								<option value={type === 'All Types' ? '' : type.toString()}>{type}</option>
							))}
						</select>
					</div>
					<div>
						<label for="price" class="block text-sm font-medium text-gray-700 mb-2">Price Range</label>
						<select
							id="price"
							class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
						>
							<option value="">Any Price</option>
							<option value="0-300000">Under $300,000</option>
							<option value="300000-500000">$300,000 - $500,000</option>
							<option value="500000-750000">$500,000 - $750,000</option>
							<option value="750000+">Over $750,000</option>
						</select>
					</div>
					<div>
						<label for="bedrooms" class="block text-sm font-medium text-gray-700 mb-2">Bedrooms</label>
						<select
							id="bedrooms"
							class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
						>
							<option value="">Any</option>
							<option value="1">1+</option>
							<option value="2">2+</option>
							<option value="3">3+</option>
							<option value="4">4+</option>
						</select>
					</div>
				</div>
				<div class="mt-4 flex justify-center">
					<button class="bg-blue-600 text-white px-6 py-2 rounded-lg font-semibold hover:bg-blue-700 transition-colors">
						Search Properties
					</button>
				</div>
			</div>
		</div>
	</section>

	<!-- Properties Grid -->
	<section class="py-16 bg-white">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="flex justify-between items-center mb-8">
				<h2 class="text-2xl font-bold text-gray-900">Available Properties</h2>
				<p class="text-gray-600">{properties.length} properties found</p>
			</div>

			{properties.length > 0 ? (
				<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
					{properties.map((property: CollectionEntry<'properties'>) => (
						<div class="bg-white border border-gray-200 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow">
							<!-- Property Image -->
							<div class="bg-gray-200 h-48 flex items-center justify-center">
								<div class="text-center text-gray-500">
									<svg class="w-16 h-16 mx-auto mb-2" fill="currentColor" viewBox="0 0 24 24">
										<path d="M19 7h-3V6a4 4 0 0 0-8 0v1H5a1 1 0 0 0-1 1v11a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8a1 1 0 0 0-1-1zM10 6a2 2 0 0 1 4 0v1h-4V6zm8 13a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V9h2v1a1 1 0 0 0 2 0V9h4v1a1 1 0 0 0 2 0V9h2v10z"/>
									</svg>
									<p class="text-sm">Property Image</p>
								</div>
							</div>

							<!-- Property Details -->
							<div class="p-6">
								<div class="flex justify-between items-start mb-2">
									<h3 class="text-lg font-semibold text-gray-900">{property.data.title}</h3>
									<span class="bg-green-100 text-green-800 text-xs font-medium px-2 py-1 rounded">
										{property.data.status}
									</span>
								</div>
								
								<p class="text-gray-600 text-sm mb-3">{property.data.address}, {property.data.city}, {property.data.state} {property.data.zipCode}</p>
								
								<div class="text-2xl font-bold text-blue-600 mb-4">{formatPrice(property.data.price)}</div>
								
								<div class="grid grid-cols-3 gap-4 text-sm text-gray-600 mb-4">
									<div>
										<span class="font-medium">{property.data.bedrooms}</span> beds
									</div>
									<div>
										<span class="font-medium">{property.data.bathrooms}</span> baths
									</div>
									<div>
										<span class="font-medium">{property.data.squareFeet.toLocaleString()}</span> sqft
									</div>
								</div>
								
								<div class="flex justify-between items-center">
									<span class="text-sm text-gray-500">{property.data.propertyType}</span>
									<a 
										href={`/properties/${property.id}`}
										class="bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-semibold hover:bg-blue-700 transition-colors"
									>
										View Details
									</a>
								</div>
							</div>
						</div>
					))}
				</div>
			) : (
				<div class="text-center py-12">
					<p class="text-gray-600">No properties available at this time.</p>
					<p class="text-gray-500 mt-2">Check back soon for new listings!</p>
				</div>
			)}

			{properties.length > 6 && (
				<!-- Load More Button -->
				<div class="text-center mt-12">
					<button class="bg-gray-100 text-gray-700 px-8 py-3 rounded-lg font-semibold hover:bg-gray-200 transition-colors">
						Load More Properties
					</button>
				</div>
			)}
		</div>
	</section>

	<!-- CTA Section -->
	<section class="py-16 bg-gray-50">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
			<h2 class="text-3xl font-bold text-gray-900 mb-4">Can't Find What You're Looking For?</h2>
			<p class="text-lg text-gray-600 mb-8">
				Let me know your specific requirements and I'll help you find the perfect property
			</p>
			<div class="flex flex-col sm:flex-row gap-4 justify-center">
				<a href="/contact" class="bg-blue-600 text-white px-8 py-3 rounded-lg font-semibold hover:bg-blue-700 transition-colors">
					Contact Me
				</a>
				<a href="/properties" class="border-2 border-blue-600 text-blue-600 px-8 py-3 rounded-lg font-semibold hover:bg-blue-600 hover:text-white transition-colors">
					Set Up Property Alerts
				</a>
			</div>
		</div>
	</section>
</Layout> 